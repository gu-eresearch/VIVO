<?xml version="1.0" encoding="ISO-8859-1"?>
<!-- $This file is distributed under the terms of the license in /doc/license.txt$ -->

<!-- See guidelines in vitro/doc/list_view_configuration_guidelines.txt -->

<list-view-config>
        <query-select>    
        PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;
        PREFIX afn:  &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
        PREFIX fn:  &lt;http://www.w3.org/2005/xpath-functions#&gt;
        PREFIX rdf:    &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
        
        SELECT DISTINCT ?position                 
                        (str(?positionTitle) AS ?positionTitle) 
						?person 
						(str(?personName) AS ?personName)
                        ?dateTimeStart ?dateTimeEnd ?hasProfile
        WHERE {
        	{
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "PVC") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Vice") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Head") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "HOS") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Dean") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "CEO") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Dir") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "DHOS") )
            }UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName   .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Dep") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Con") )
            }  UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "ARC") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(fn:starts-with(?positionTitle, "Prog") )
            } UNION
            {
				?subject ?property ?position  
				OPTIONAL { ?position core:positionForPerson ?person .
						   ?person rdfs:label ?personName  .
						   OPTIONAL {
                               ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
						   }
						   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
				}                        
				OPTIONAL { ?position rdfs:label ?positionTitle }
				OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
						   OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
									  ?dateTimeStartValue core:dateTime ?dateTimeStart 
						   }
						   OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
									  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
	
						   }
						 
				}
				FILTER 	(	fn:contains(?positionTitle, "Coord") )
            }
          
            
            #FILTER 	(	fn:contains(?positionTitle, "PVC") ||
            #			fn:contains(?positionTitle, "Vice") ||
            #			fn:contains(?positionTitle, "Head") ||
            #			fn:contains(?positionTitle, "Con") ||
            #			fn:contains(?positionTitle, "HOS") ||
            #			fn:contains(?positionTitle, "Dep") ||
            #			fn:contains(?positionTitle, "Dir") ||
            #			fn:contains(?positionTitle, "CEO") ||
            #			fn:contains(?positionTitle, "ARC") ||
            #			fn:starts-with(?positionTitle, "Prog") ||
            #			fn:contains(?positionTitle, "Coord") 
            #		)  
            
            
            # Current positions only: end date is either null or not in the past
            FILTER ( !bound(?dateTimeEnd) ||                        
                       afn:substring(str(?dateTimeEnd), 0, 4) &gt;= afn:substring(str(afn:now()), 0, 4) )
        } 
    </query-select>
    
    <query-collated>    
        PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;
        PREFIX afn:  &lt;http://jena.hpl.hp.com/ARQ/function#&gt;
        PREFIX fn:  &lt;http://www.w3.org/2005/xpath-functions#&gt;
        PREFIX rdf:    &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;
        
        SELECT DISTINCT ?subclass 
                        ?position
                        (str(?positionTitle) AS ?positionTitle) 
						?person 
						(str(?personName) AS ?personName)
                        ?dateTimeStart ?dateTimeEnd ?hasProfile WHERE {
            ?subject ?property ?position  
            OPTIONAL { ?position core:positionForPerson ?person .
                       ?person rdfs:label ?personName .
                       OPTIONAL {
						   ?person ?isprofiletype &lt;http://griffith.edu.au/ontology/hubextensions/ResearchHubPerson&gt; .
					   }
					   LET(?hasProfile := IF( bound(?isprofiletype), 1, 0) ) .
            }                 
            OPTIONAL { ?position a ?subclass .
                       ?subclass rdfs:subClassOf core:Position 
            }         
            OPTIONAL { ?position rdfs:label ?positionTitle }
            OPTIONAL { ?position core:dateTimeInterval ?dateTimeInterval 
                       OPTIONAL { ?dateTimeInterval core:start ?dateTimeStartValue .                     
                                  ?dateTimeStartValue core:dateTime ?dateTimeStart 
                       }
                       OPTIONAL { ?dateTimeInterval core:end ?dateTimeEndValue .
                                  ?dateTimeEndValue core:dateTime ?dateTimeEnd  
                       }
                     
            
            }
            
            		
            FILTER 	(	fn:contains(?positionTitle, "PVC") ||
            			fn:contains(?positionTitle, "Vice") ||
            			fn:contains(?positionTitle, "Head") ||
            			fn:contains(?positionTitle, "Con") ||
            			fn:contains(?positionTitle, "HOS") ||
            			fn:contains(?positionTitle, "Dean") ||
            			fn:contains(?positionTitle, "Dep") ||
            			fn:contains(?positionTitle, "Dir") ||
            			fn:contains(?positionTitle, "CEO") ||
            			fn:contains(?positionTitle, "ARC") ||
            			fn:starts-with(?positionTitle, "Prog") ||
            			fn:contains(?positionTitle, "Coord") 
            		)  		
            # Current positions only: end date is either null or not in the past		
            FILTER ( !bound(?dateTimeEnd) ||                        
                       afn:substring(str(?dateTimeEnd), 0, 4) &gt;= afn:substring(str(afn:now()), 0, 4) )
        } 
    </query-collated>
    
    <query-construct>
        PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;  
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;  
        CONSTRUCT {
            ?subclass rdfs:subClassOf core:Position 
        } WHERE {
            ?subclass rdfs:subClassOf core:Position 
        }
    </query-construct>
    
    <query-construct>
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;
        PREFIX rdfs: &lt;http://www.w3.org/2000/01/rdf-schema#&gt;    
        PREFIX rdf:    &lt;http://www.w3.org/1999/02/22-rdf-syntax-ns#&gt;	
        CONSTRUCT { 
            ?subject ?property ?position .
            ?position ?positionProperty ?positionValue .
            ?person rdfs:label ?personName .
            ?person rdf:type ?indivType .
        } WHERE {
            {
               ?subject ?property ?position 
            } UNION {
               ?subject ?property ?position .
               ?position ?positionProperty ?positionValue 
            } UNION {
               ?subject ?property ?position .
               ?position core:positionForPerson ?person .
               ?person rdfs:label ?personName   
            } UNION {
             	?subject ?property ?position .
               	?position core:positionForPerson ?person .
		   		?person rdf:type ?indivType .
            }
        } 
    </query-construct>
    
    <query-construct>
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;   
        CONSTRUCT { 
            ?subject ?property ?position .  
            ?position core:dateTimeInterval ?dateTimeInterval .
            ?dateTimeInterval core:start ?dateTimeStartValue .
            ?dateTimeStartValue core:dateTime ?dateTimeStart 
        } WHERE {
            ?subject ?property ?position .  
            ?position core:dateTimeInterval ?dateTimeInterval .
            ?dateTimeInterval core:start ?dateTimeStartValue .
            ?dateTimeStartValue core:dateTime ?dateTimeStart 
        } 
    </query-construct>

    <query-construct>
        PREFIX core: &lt;http://vivoweb.org/ontology/core#&gt;    
        CONSTRUCT { 
            ?subject ?property ?position .  
            ?position core:dateTimeInterval ?dateTimeInterval .
            ?dateTimeInterval core:end ?dateTimeEndValue .
            ?dateTimeEndValue core:dateTime ?dateTimeEnd 
        } WHERE {
            ?subject ?property ?position .  
            ?position core:dateTimeInterval ?dateTimeInterval .
            ?dateTimeInterval core:end ?dateTimeEndValue .
            ?dateTimeEndValue core:dateTime ?dateTimeEnd 
        } 
    </query-construct>
    
    <template>propStatement-organizationForPosition.ftl</template>
</list-view-config>
